NAME: CMAKE

ON:
  PULL:
    branches: [ "main" ]
  PUSH:
    branches: [ "master" ]

ENV:
  ## Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  BUILD:
    runs-on: ubuntu-latest
    steps:
    - use: actions/checkout@v3
    - name: Configure CMAKE
    
      # Configure CMAKE in a 'BUILD' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: BUILD
      # Build your program with the configuration file
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # Execute tests defined by the CMake configuration. See http://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    - name: TEST
    
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}


  env:
    - NAME: __rc""
    - BUILD_TYPE: Release



"createdir", null, 0]}, -1], ["crt:  db", ["__UnexpectedUseInComet__"]]
"clearTimeoutOrWWWMobile", null]}, -1], ["cr:8000", [" "]]
"setTimeoutOrWWWMobile", null]}, -1], ["cr: 405", ["promiseimpl"]]

"createproc", null, 0]}, 1],  ["cr: ", [" "]]
{"res:", ["crt:  db", {["createproc", null, -1]}, -1], "crt: ", ["null"]}
"killprocessoncancel", null]}, 1], ["crt:", [" "]]


["promisemonitor", nullptr]

{"_timesliceimpl", null, 1]}, ["crt: ", [" "]]
[{"RunWWW", null}, -1], ["crt:", ["_timesliceimpl"]]
{["promiseimpl", null, 0]}, ["cr:",[".__META_JSON"], {"__rc", "null",".__META_JSON"]}, -1], ["cr:t", {"__rc__" : [null, null], [ * ], 1}, ["crt: ", {["__UnexpectedUseInComet__"]},
{"__rc", "__UnexpectedUseInComet__", null]}, -1], "crt: ", ["promisemonitor"]}

